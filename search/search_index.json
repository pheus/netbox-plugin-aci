{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#NetBox-ACI-Plugin","title":"NetBox ACI Plugin","text":"<p>The NetBox plugin for Cisco ACI allows NetBox to document ACI specific objects like Tenants (TN), Application Profiles (AP), Endpoint Groups (EPG), Bridge Domains (BD) and Contexts (CTX) / Virtual Routing and Forwarding (VRF).</p> <p>Documentation: https://pheus.github.io/netbox-aci-plugin/</p>"},{"location":"#Features","title":"Features","text":"<ul> <li>Tenants</li> <li>Application Profiles</li> <li>Endpoint Groups</li> <li>Bridge Domains</li> <li>VRF</li> </ul>"},{"location":"#Compatibility","title":"Compatibility","text":"NetBox Version Plugin Version 4.0 0.0.6"},{"location":"#Installing","title":"Installing","text":"<p>For adding to a NetBox Docker setup see the general instructions for using netbox-docker with plugins.</p> <p>While this is still in development and not yet on pypi you can install with pip:</p> <pre><code>pip install git+https://github.com/pheus/netbox-aci-plugin\n</code></pre> <p>or by adding to your <code>local_requirements.txt</code> or <code>plugin_requirements.txt</code> (netbox-docker):</p> <pre><code>git+https://github.com/pheus/netbox-aci-plugin\n</code></pre> <p>Enable the plugin in <code>/opt/netbox/netbox/netbox/configuration.py</code>,  or if you use netbox-docker, your <code>/configuration/plugins.py</code> file :</p> <pre><code>PLUGINS = [\n    'netbox-aci-plugin'\n]\n\nPLUGINS_CONFIG = {\n    \"netbox-aci-plugin\": {},\n}\n</code></pre>"},{"location":"#Status","title":"Status","text":"<p>This project has just started. Database migrations will be added once the main models have been defined.</p>"},{"location":"#Release-notes","title":"Release notes","text":"<p>See the changelog.</p>"},{"location":"#Licensing","title":"Licensing","text":"<p>GNU General Public License v3.0 or later.</p> <p>See LICENSE to see the full text.</p>"},{"location":"#Credits","title":"Credits","text":"<p>Based on the NetBox plugin tutorial:</p> <ul> <li>demo repository</li> <li>tutorial</li> </ul> <p>This package was created with Cookiecutter and the <code>netbox-community/cookiecutter-netbox-plugin</code> project template.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#Changelog","title":"Changelog","text":""},{"location":"changelog/#010-unreleased","title":"0.1.0 (unreleased)","text":"<ul> <li>First release on PyPI.</li> </ul>"},{"location":"changelog/#006-2024-06-21","title":"0.0.6 (2024-06-21)","text":""},{"location":"changelog/#Enhancements","title":"Enhancements","text":"<ul> <li>Add bulk edit and delete views</li> <li>Add import views</li> <li>Add import buttons to navigation</li> <li>Add <code>add</code> and <code>view</code> permission handling in UI</li> <li>Add related names for NetBox models</li> </ul>"},{"location":"changelog/#Bug-Fixes","title":"Bug Fixes","text":"<ul> <li>Fix PIM IPv4 source filter verbose name</li> </ul>"},{"location":"changelog/#005-2024-06-07","title":"0.0.5 (2024-06-07)","text":""},{"location":"changelog/#Enhancements_1","title":"Enhancements","text":"<ul> <li>Add ACI Endpoint Group model and views</li> <li>Prefill NetBox tenant while adding a new element through a ChildrenView</li> </ul>"},{"location":"changelog/#Bug-Fixes_1","title":"Bug Fixes","text":"<ul> <li>Fix typo in ACI Bridge Domain Subnet form for NetBox VRF</li> <li>Filter Bridge Domain choices based on ACI Tenant and/or ACI VRF in ACI Bridge Domain Subnet form</li> <li>Fix typo in ChildrenView registration</li> <li>Use the relevant model class for the tag filter</li> </ul>"},{"location":"changelog/#004-2024-05-27","title":"0.0.4 (2024-05-27)","text":""},{"location":"changelog/#Enhancements_2","title":"Enhancements","text":"<ul> <li>Add ACI Bridge Domain Subnet model and views</li> <li>Add ACI Bridge Domain tab to ACI Tenant</li> <li>Rename <code>alias</code> to <code>name_alias</code> following the ACI policy model</li> <li>Change related name of ACI VRF for ACI Bridge Domain to <code>aci_bridge_domains</code></li> </ul>"},{"location":"changelog/#Bug-Fixes_2","title":"Bug Fixes","text":"<ul> <li>Fix form query parameters for NetBox tenants</li> <li>Add blank choices to boolean fields for filter forms</li> <li>Add NetBox tenant field to ACI Bridge Domain form</li> </ul>"},{"location":"changelog/#003-2024-05-22","title":"0.0.3 (2024-05-22)","text":""},{"location":"changelog/#Enhancements_3","title":"Enhancements","text":"<ul> <li>Add ACI Bridge Domain model and views</li> <li>Allow certain model fields to be cloned</li> </ul>"},{"location":"changelog/#002-2024-05-19","title":"0.0.2 (2024-05-19)","text":""},{"location":"changelog/#Enhancements_4","title":"Enhancements","text":"<ul> <li>Add ACI Application Profile model and views</li> <li>Add ACI VRF model and views</li> <li>Add ACI Application Profile tab view to ACITenant</li> </ul>"},{"location":"changelog/#Bug-Fixes_3","title":"Bug Fixes","text":"<ul> <li>Allow translation of table headers</li> <li>Add placeholders in templates (for empty fields)</li> <li>Change model's url paths to plural</li> <li>Add length validator to alias and description</li> </ul>"},{"location":"changelog/#001-2024-05-09","title":"0.0.1 (2024-05-09)","text":""},{"location":"changelog/#Enhancements_5","title":"Enhancements","text":"<ul> <li>Add ACI Tenant model and views</li> <li>Support NetBox 4.0.0</li> </ul>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#Contributing","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>We love your input! We want to make contributing to this project as easy and transparent as possible, whether it's:</p> <ul> <li>Reporting a bug</li> <li>Discussing the current state of the code</li> <li>Submitting a fix</li> <li>Proposing new features</li> <li>Becoming a maintainer</li> </ul>"},{"location":"contributing/#General-Tips-for-Working-on-GitHub","title":"General Tips for Working on GitHub","text":"<ul> <li>Register for a free GitHub account if you haven't already.</li> <li>You can use GitHub Markdown for formatting text and adding images.</li> <li>To help mitigate notification spam, please avoid \"bumping\" issues with no activity. (To vote an issue up or down, use a  or  reaction.)</li> <li>Please avoid pinging members with <code>@</code> unless they've previously expressed interest or involvement with that particular issue.</li> <li>Familiarize yourself with this list of discussion anti-patterns and make every effort to avoid them.</li> </ul>"},{"location":"contributing/#Types-of-Contributions","title":"Types of Contributions","text":""},{"location":"contributing/#Report-Bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/pheus/netbox-aci-plugin/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#Fix-Bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#Implement-Features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#Write-Documentation","title":"Write Documentation","text":"<p>NetBox ACI Plugin could always use more documentation, whether as part of the official NetBox ACI Plugin docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#Submit-Feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/pheus/netbox-aci-plugin/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions   are welcome :)</li> </ul>"},{"location":"contributing/#Get-Started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up <code>netbox-aci-plugin</code> for local development.</p> <ol> <li>Fork the <code>netbox-aci-plugin</code> repo on GitHub.</li> <li> <p>Clone your fork locally</p> <pre><code>$ git clone git@github.com:your_name_here/netbox-aci-plugin.git\n</code></pre> </li> <li> <p>Activate the NetBox virtual environment (see the NetBox documentation under Setting up a Development Environment):</p> <pre><code>$ source ~/.venv/netbox/bin/activate\n</code></pre> </li> <li> <p>Add the plugin to NetBox virtual environment in Develop mode (see Plugins Development):</p> <p>To ease development, it is recommended to go ahead and install the plugin at this point using setuptools' develop mode. This will create symbolic links within your Python environment to the plugin development directory. Call setup.py from the plugin's root directory with the develop argument (instead of install):</p> <pre><code>$ python setup.py develop\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#Pull-Request-Guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated. Put    your new functionality into a function with a docstring, and add the    feature to the list in README.md.</li> <li>The pull request should work for Python 3.9, 3.10, 3.11 and 3.12. Check    https://github.com/pheus/netbox-aci-plugin/actions    and make sure that the tests pass for all supported Python versions.</li> </ol>"},{"location":"contributing/#Deploying","title":"Deploying","text":"<p>A reminder for the maintainers on how to deploy. Make sure all your changes are committed (including an entry in CHANGELOG.md) and that all tests pass. Then in the github project go to <code>Releases</code> and create a new release with a new tag.  This will automatically upload the release to pypi:</p>"},{"location":"features/tenants/","title":"Tenants","text":"<p>An ACI fabric manages one or more tenants based on the tenant portion of the hierarchical management information tree (MIT).</p> <pre><code>flowchart TD\n    TN([Tenant])\n    AP(Application Profile)\n    EPG(Endpoint Group)\n    BD(Bridge Domain)\n    SN(Subnet)\n    VRF(VRF)\n    subgraph graphTN [Tenant]\n        TN\n    end\n    subgraph graphAP [Application Profile]\n        TN --&gt;|1:n| AP\n        AP --&gt;|1:n| EPG\n    end\n    subgraph graphNW [Network]\n        TN --&gt;|1:n| VRF\n        subgraph graphBD [Bridge Domain]\n            TN --&gt;|1:n| BD\n            BD --&gt;|1:n| SN\n        end\n        BD -.-&gt;|1:n| VRF\n    end\n    EPG --&gt;|n:1| BD</code></pre>"},{"location":"features/tenants/#Tenant","title":"Tenant","text":"<p>A tenant in the ACI policy model represents a container for application policies with domain-based access control. Tenants can be modeled after customers, organizations, domains, or used to group policies.</p> <p>The ACITenant model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the tenant name in the ACI</li> </ul> <p>Optional fields:</p> <ul> <li>Name alias: a name alias in the ACI</li> <li>Description: a description of the ACI tenant</li> <li>NetBox Tenant: an assignment to the NetBox tenant model</li> <li>Comments: a text field for additional notes</li> <li>Tags: a list of NetBox tags</li> </ul>"},{"location":"features/tenants/#Application-Profile","title":"Application Profile","text":"<p>An application profile contains endpoint groups (EPGs) and may be modeled after applications, stages or domains.</p> <p>The ACIAppProfile model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the application profile name in the ACI</li> <li>ACI Tenant: a reference to the ACITenant model.</li> </ul> <p>Optional fields:</p> <ul> <li>Name alias: a name alias in the ACI for the application profile</li> <li>Description: a description of the application profile</li> <li>NetBox Tenant: a reference to the NetBox tenant model</li> <li>Comments: a text field for additional notes</li> <li>Tags: a list of NetBox tags</li> </ul>"},{"location":"features/tenants/#VRF","title":"VRF","text":"<p>A VRF (virtual routing and forwarding) instance defines an unique layer 3 forwarding, address and application policy domain for a tenant. The layer 3 domain must have unique IP addresses. A tenant can contain multiple VRFs. Bridge Domains are associated with a VRF.</p> <p>The ACIVRF model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the VRF name in the ACI</li> <li>ACI Tenant: a reference to the ACITenant model.</li> </ul> <p>Optional fields:</p> <ul> <li>Name alias: a name alias in the ACI for the VRF</li> <li>Description: a description of the VRF</li> <li>NetBox Tenant: a reference to the NetBox tenant model</li> <li>NetBox VRF: a reference to the NetBox vrf model</li> <li>BD enforcement enabled: a boolean field, whether endpoints can ping other bridge domain gateways (default is false)</li> <li>DNS labels: a comma-separated list of DNS labels</li> <li>IP data plane learning enabled: a boolean field representing whether IP data plane learning is enabled for the VRF. (default is true)</li> <li>PC enforcement direction: Direction of policy control enforcement, values: ingress, egress (default is ingress)</li> <li>PC enforcement preference: Preference of policy control enforcement, values: enforced, unenforced (default is enforced)</li> <li>PIM IPv4 enabled: a boolean field, whether IPv4 multicast is enabled (default is false)</li> <li>PIM IPv6 enabled: a boolean field, whether IPv6 multicast is enabled (default is false)</li> <li>Preferred group enabled: a boolean field, if preferred group feature is enabled for the VRF (default is false)</li> <li>Comments: a text field for additional notes</li> <li>Tags: a list of NetBox tags</li> </ul>"},{"location":"features/tenants/#Bridge-Domain","title":"Bridge Domain","text":"<p>A Bridge Domain represents a layer 2 forwarding and flood domain defining an unique MAC address space. Each Bridge Domain must be linked to a VRF instance. One or more Subnets are associated with a Bridge Domain.</p> <p>The ACIBridgeDomain model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the Bridge Domain name in the ACI</li> <li>ACI VRF: a reference to the ACIVRF model.</li> </ul> <p>Optional fields:</p> <ul> <li>Name alias: a name alias in the ACI for the Bridge Domain</li> <li>Description: a description of the Bridge Domain</li> <li>NetBox Tenant: a reference to the NetBox tenant model</li> <li>Advertise host routes enabled: a boolean field, whether associated endpoints are advertised as host routes (/32 prefixes) out of the L3Outs. (default is false)</li> <li>ARP flooding enabled: a boolean field representing the state, whether Address Resolution Protocol (ARP) are flooded within the Bridge Domain. (default is false)</li> <li>Clear remote mac entries enabled: a boolean field, whether MAC endpoint entries should be deleted on remote leaves, when endpoints are removed from the local leaf. (default is false)</li> <li>DHCP labels: a comma-separated list of DHCP labels</li> <li>EP move detection enabled: a boolean field documenting the state of endpoint move detection based on Gratuitous ARP (GARP). (default is false)</li> <li>IGMP interface policy name: the name of the IGMP interface policy</li> <li>IGMP snooping policy name: the name of the IGMP snooping policy</li> <li>IP data plane learning enabled: a boolean field representing whether IP data plane learning is enabled for the Bridge Domain. (default is true)</li> <li>Limit IP learn enabled: a boolean field, if IP learning is limited to the Bridge Domain's subnets. (default is true)</li> <li>MAC address: the MAC address of the Bridge Domain's gateway. (default is 00:22:BD:F8:19:FF)</li> <li>Multi destination flooding: forwarding method for layer 2 multicast, broadcast, and link layer traffic, values: bd-flood, encap-flood, drop (default is bd-flood)</li> <li>PIM IPv4 enabled: a boolean field, whether IPv4 multicast is enabled (default is false)</li> <li>PIM IPv4 destination filter: the name of the PIM IPv4 destination filter</li> <li>PIM IPv4 source filter: the name of the PIM IPv4 source filter</li> <li>PIM IPv6 enabled: a boolean field, whether IPv6 multicast is enabled (default is false)</li> <li>Unicast routing enabled: a boolean field, whether unicast routing is enabled (default is true)</li> <li>Unknown IPv4 multicast: defines the IPv4 unknown multicast forwarding method, values: flood, opt-flood (default is flood)</li> <li>Unknown IPv6 multicast: defines the IPv6 unknown multicast forwarding method, values: flood, opt-flood (default is flood)</li> <li>Virtual MAC address: the virtual MAC address of the Bridge Domain / SVI used when the Bridge Domain is extended to multiple sites using L2Outs</li> <li>Comments: a text field for additional notes</li> <li>Tags: a list of NetBox tags</li> </ul>"},{"location":"features/tenants/#Bridge-Domain-Subnet","title":"Bridge Domain Subnet","text":"<p>A Bridge Domain Subnet is anycast gateway IP address of the Bridge Domain. The Subnet must be linked to a Bridge Domain instance. One or more Subnets can be associated with a Bridge Domain, but ony one Subnet can be preferred.</p> <p>The ACIBridgeDomainSubnet model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the Bridge Domain name in the ACI</li> <li>ACI Bridge Domain: a reference to the ACIBridgeDomain model</li> <li>Gateway IP Address: the gateway IP address of the Bridge Domain (referencing an NetBox IP address)</li> </ul> <p>Optional fields:</p> <ul> <li>Name alias: a name alias in the ACI for the Bridge Domain Subnet</li> <li>Description: a description of the Bridge Domain Subnet</li> <li>NetBox Tenant: a reference to the NetBox tenant model</li> <li>Advertised externally enabled: a boolean field, whether the subnet is advertised to the outside to any associated L3Outs (public scope). (default is false)</li> <li>IGMP querier enabled: a boolean field specifying, whether the gateway IP address is treated as an IGMP querier source IP. (default is false)</li> <li>IP data plane learning enabled: a boolean field representing whether IP data plane learning is enabled for the Bridge Domain Subnet. (default is true)</li> <li>No default SVI gateway: a boolean field, if the default gateway functionality of the address is removed. (default is false)</li> <li>ND RA enabled: a boolean field, whether the gateway IP is treated as a IPv6 Neighbor Discovery Router Advertisement prefix. (default is true)</li> <li>ND RA prefix policy name: the name of the Neighbor Discovery Router Advertisement prefix policy</li> <li>Preferred IP address enabled: a boolean field, if the gateway IP address is the preferred (primary) IP gateway of the Bridge Domain. (default is false)</li> <li>Shared enabled: a boolean field, if endpoints can communicate only within the same (disabled) or shared VRFs (enabled) in the ACI fabric (inter-VRF route leaking). (default is false)</li> <li>Virtual IP enabled: a boolean field determining, if the gateway is a virtual IP address (used for stretched Bridge Domains to multiple sites). (default is false)</li> <li>Comments: a text field for additional notes</li> <li>Tags: a list of NetBox tags</li> </ul>"},{"location":"features/tenants/#Endpoint-Group","title":"Endpoint Group","text":"<p>A Endpoint Group (EPG) is a named collection of endpoints (network connected devices). The EPG needs to be contained in an Application Profile and be linked to a Bridge Domain.</p> <p>The ACIEndpointGroup model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the Endpoint Group name in the ACI</li> <li>ACI Application Profile: containing the Endpoint Group</li> <li>ACI Bridge Domain: linking the associated Bridge Domain</li> </ul> <p>Optional fields:</p> <ul> <li>Name alias: a name alias in the ACI for the Endpoint Group</li> <li>Description: a description of the Endpoint Group</li> <li>NetBox Tenant: a reference to the NetBox tenant model</li> <li>Admin shutdown: a boolean field, whether the EPG is in shutdown mode removing all policy configuration from all switches. (default is false)</li> <li>Custom QoS policy name: the name of the custom Quality of Service (Qos) policy name associated with the EPG</li> <li>Flood in encapsulation enabled: a boolean field representing whether the flooding traffic is limited to the encapsulation of the EPG. (default is false)</li> <li>Intra-EPG isolation enabled: a boolean field, whether the communication between endpoints in the EPG is prevented. (default is false)</li> <li>QoS class: represents the assignment of the ACI Quality of Service (QoS) level for traffic sourced in the EPG, values: unspecified, level1, level2, level3, level4, level5, level6. (default is unspecified)</li> <li>Preferred group member enabled: a boolean field, if the EPG is a member of the preferred group and allows communication without contracts. (default is false)</li> <li>Proxy-ARP enabled: a boolean field, whether proxy ARP is enabled for the EPG. (default is false)</li> <li>Comments: a text field for additional notes</li> <li>Tags: a list of NetBox tags</li> </ul>"}]}